public without sharing class OrderItemHandler {
    // //Before Insert & After Undelete
    // public static void PreventAddingSameOrderItem (List<OrderItems> newOrderItems)  {

    // }

    // public static void CheckUnitPrice (List<OrderItems> newOrderItems)  {
        
    // }


    // //Before Update
    // public static void PreventChanges (List<OrderItems> originalOrderItems, Map<ID, Order> updatedOrdersItems)  {

    //     // List<Order> associatedOrders = [SELECT status FROM order WHERE 
    //     // For (OrderItem O : originalOrdersItems) {
    //     //     if (O.status == 'Activated') {
    //     //         updatedOrders.get(O.id).addError('Error: You cannot make changes to an activated order');
    //     //     }
    //     // } 
    // }


    // //After Undelete
    // public static void SetUnitPrice (List<OrderItems> undeletedOrderItems) {

    // }
}